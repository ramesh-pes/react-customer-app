{"version":3,"sources":["services/customerService.js","components/Menu.js","containers/CustomerApp.js","containers/Home.js","containers/Login.js","containers/About.js","containers/Customer.js","containers/CustomerADD.js","containers/CustomerEdit.js","containers/Temperature.js","containers/Maths.js","containers/HocExample.js","App.js","serviceWorker.js","index.js"],"names":["model","customers","id","name","email","phone","address","getRecords","getRecordById","recordId","i","length","searchByFieldAndText","field","stext","searchCustomers","console","log","toLowerCase","startsWith","push","addRecord","record","deleteRecord","temp","updateRecord","customer","module","exports","Menu","doLogout","localStorage","removeItem","className","to","onClick","this","Component","CustomerApp","props","handleChange","e","setState","target","value","deleteItem","customerService","items","editItem","state","filter","item","buttonLabel","handleSubmitAddEdit","bind","preventDefault","newItem","Date","now","onSubmit","type","onChange","placeholder","CustomerList","border","cellPadding","cellSpacing","width","map","key","React","Home","Login","password","handleSubmit","setItem","history","alert","Container","Row","Form","Group","controlId","Label","Control","Text","Button","variant","About","apiCustomer","Customer","useState","init","setInit","setCustomers","useEffect","fetch","then","res","json","result","error","method","body","JSON","stringify","headers","Accept","Table","striped","bordered","hover","size","CustomerAdd","setName","setEmail","setPhone","setAddress","match","params","CustomerEdit","setCustomer","prevCust","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","BoilingVerdict","TemperatureInput","onTemperatureChange","scale","Calculator","handleCelsiusChange","handleFahrenheitChange","Sum","a","b","onValueChange","Maths","val","ThemeContext","createContext","App","Provider","Toolbar","ThemedButton","context","contextType","fakeAuth","isAuthenticated","signin","cb","setTimeout","signout","authContext","ProvideAuth","children","auth","user","setUser","getItem","useProvideAuth","useAuth","useContext","PrivateRoute","rest","render","location","pathname","from","style","marginLeft","exact","path","component","HocExample","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1330a90c.chunk.js","sourcesContent":["var model ={};\nvar customers = [\n\t{id:1, name:'Vivek', email:'Vivek@gmail.com', phone:'9908436', address:'ahmedabad'},\n\t{id:2, name:'Ramesh s', email:'ramesh@gmail.com', phone:'675445', address:'davangere'},\n\t{id:3, name:'Krishna', email:'krishnakumar@gmail.com', phone:'112554233', address:'mumbai'},\n\t{id:4, name:'Rahim', email:'rahim@gmail.com', phone:'53466', address:'delhi'}\n];\n\nmodel.getRecords = function(){\n\treturn customers;\n}\nmodel.getRecordById=(recordId)=>{\n    for (let i = 0; i < customers.length; i++) {\n        if(recordId==customers[i].id){\n            return customers[i]\n        }\n        \n    }\n    // customers.forEach(element => {\n        \n    //     if(recordId==element.id){\n            \n            \n    //         return element;\n    //     }\n    // });\n    \n    return {};\n}\nmodel.searchByFieldAndText=(field,stext)=>{\n\tlet searchCustomers=[]\n\tconsole.log(stext.toLowerCase());\n\tfor (let i = 0; i < customers.length; i++) {\n\t\tif(customers[i][field].toLowerCase().startsWith(stext)) {\n\t\t\tsearchCustomers.push(customers[i])\n\t\t}\t\n\t}\n\treturn searchCustomers;\n}\n\nmodel.addRecord = function(record){\n\treturn customers.push(record);\n}\n\nmodel.deleteRecord = function(id){\n\tlet temp = [];\n\tfor (var i = 0; i < customers.length; i++) {\n\t\tif(id != customers[i].id){\n\t\t\ttemp.push(customers[i]);\n\t\t}\n\t}\n    customers = temp;\n    return \"deleted\";\n}\n\nmodel.updateRecord = function(record){\n\tlet customer = record;\n\tfor (var i = 0; i < customers.length; i++) {\n\t\tif(customer.id == customers[i].id){\n\t\t\tcustomers[i] = customer;\n\t\t}\n\t}\n}\nmodule.exports = model;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\n\nclass Menu extends Component {\n  doLogout=()=>{\n    localStorage.removeItem('user')\n  }\n  render() {\n    return (\n      <div className=\"menu\">\n        <h2>CUSTOMER MANAGEMENT APP</h2>\n        <br/>\n        <Link to={\"/home\"}>Home</Link> &nbsp; | &nbsp;\n        <Link to={\"/customer\"}>Customer</Link>  &nbsp;| &nbsp;\n        <Link to={\"/customer-app\"}>CustomerApp</Link>  &nbsp;| &nbsp;\n        <Link to={\"/temperature\"}>Temperature</Link>  &nbsp;| &nbsp;\n        <Link to={\"/maths\"}> Maths</Link>  &nbsp; | &nbsp;\n        <Link to={\"/about\"}>About</Link> &nbsp; | &nbsp;\n        <Link onClick={this.doLogout} to={\"/login\"}>Logout</Link>  &nbsp; | &nbsp;\n        <hr />\n    \n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport Menu from \"../components/Menu\";\nimport customerService from '../services/customerService';\n\nexport default class CustomerApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: customerService.getRecords(),\n      name: \"\", id: '', email: \"\", phone: \"\", address: \"\",buttonLabel:\"Add Customer\"\n    };\n    console.log(this.state);\n    this.handleSubmitAddEdit = this.handleSubmitAddEdit.bind(this); // line handles this pointer\n  }\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmitAddEdit(e) {\n    e.preventDefault();\n    if (!this.state.name.length) {\n      return;\n    }\n    \n    const newItem = {\n      name: this.state.name,\n      email: this.state.email,\n      phone: this.state.phone,\n      address: this.state.address,\n    };\n    if(this.state.id !=''){\n        newItem.id=this.state.id;\n        customerService.updateRecord(newItem)\n        this.state.items=customerService.getRecords()\n    }\n    else{\n      newItem.id=Date.now()\n      customerService.addRecord(newItem)\n        \n        this.state.items=customerService.getRecords()\n    }\n    this.setState({\n        name:'',\n        email:'',\n        phone:'',\n        address:'',\n        id:'',\n        buttonLabel:'Add Customer'\n\n    })\n    \n  }\n  deleteItem = (id) => {\n    console.log(\"id : \", id);\n    customerService.deleteRecord(id);\n    // var temp = this.state.items.filter((item) => item.id !== id);\n    this.setState({\n      items: customerService.getRecords(),\n    });\n  };\n\n  editItem = (id) => {\n    console.log(\"edit id : \", id);\n    var temp = this.state.items.filter((item) => item.id == id);\n    console.log(\"temp :  \", temp[0]);\n    this.setState({\n        name:temp[0].name,\n        email:temp[0].email,\n        phone:temp[0].phone,\n        address:temp[0].address,\n        id:temp[0].id,\n        buttonLabel:\"Edit Customer\"\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <Menu/>\n        <h3>CUSTOMER APP</h3>\n\n        <form onSubmit={this.handleSubmitAddEdit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n            placeholder=\"name\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"email\"\n            onChange={this.handleChange}\n            value={this.state.email}\n            placeholder=\"email\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"phone\"\n            onChange={this.handleChange}\n            value={this.state.phone}\n            placeholder=\"phone\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"address\"\n            onChange={this.handleChange}\n            value={this.state.address}\n            placeholder=\"address\"\n          />\n          <br />\n          <br />\n          <button>{this.state.buttonLabel}</button>\n          <br />\n          <br />\n        </form>\n        <CustomerList\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n          editItem={this.editItem}\n        />\n      </div>\n    );\n  }\n}\n\nclass CustomerList extends React.Component {\n  render() {\n    return (\n      <div>\n        <table border=\"1\" cellPadding=\"7\" cellSpacing=\"7\">\n          <thead>\n            <tr>\n              <th width=\"20px\">No</th>\n              <th width=\"250px\">Name</th>\n              <th width=\"220px\">Email</th>\n              <th width=\"100px\">Phone</th>\n              <th width=\"300px\">Address</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.items.map((item) => (\n              <tr key={item.id}>\n                <td>{item.id}</td>\n                <td id={item.id}>{item.name}</td>\n                <td>{item.email}</td>\n                <td>{item.phone}</td>\n                <td>{item.address}</td>\n                <td>\n                  <button\n                    onClick={() => {\n                      this.props.editItem(item.id);\n                    }}\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    onClick={() => {\n                      this.props.deleteItem(item.id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Menu from '../components/Menu';\nimport customerService from '../services/customerService';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <Menu/>\n                <h2>HOME </h2>\n        <h5>No customer in customer APP : {customerService.getRecords().length}</h5>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport CustomerApp from \"./CustomerApp\";\nimport { Button, Form,Container, Row } from 'react-bootstrap';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"admin\",\n      password: \"admin\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    if (e.target.name === \"email\") {\n      this.setState({\n        email: e.target.value,\n      });\n    } else if (e.target.password === \"password\") {\n      this.setState({\n        password: e.target.value,\n      });\n    }\n  }\n  handleSubmit(e) {\n    if (this.state.email === this.state.password) {\n      localStorage.setItem('user',this.state.email)\n      \n      this.props.history.push(\"/customer-app\");\n    } else {\n      alert(\"InCorrect email or password, please try again\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Login</h2>\n        <Container>\n            <Row>\n                \n            </Row>\n        </Container>\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleChange} />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\"  value={this.state.password}\n          onChange={this.handleChange}/>\n          </Form.Group>\n          \n          <Button onClick={this.handleSubmit} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        \n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport Menu from '../components/Menu';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <Menu/>\n                <h2>About</h2>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component, useEffect, useState } from \"react\";\nimport Menu from \"../components/Menu\";\nimport { Button, Table,Container, Row } from 'react-bootstrap';\nimport customerService from \"../services/customerService\";\n\n///using api to fetch data from server\nvar apiCustomer = \"http://localhost:4000/api/customer\";\nexport default function Customer(props) {\n  const [init, setInit] = useState(false);\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    if (!init) {\n      setInit(true);\n\n      fetch(apiCustomer)\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            setCustomers(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            //manage error\n          }\n        );\n    }\n  });\n\n  var deleteItem = (item) => {\n    console.log(\"id : \", item.id);\n    fetch(apiCustomer,{\n      method:'DELETE',\n      body:JSON.stringify(item),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(result=>{\n      setInit(false)\n    })\n    \n    // customerService.deleteRecord(id);\n    // var temp = this.state.items.filter((item) => item.id !== id);\n  };\n  return (\n    <div>\n      <Menu />\n      <h3>Customers from server</h3>\n      <button\n        onClick={() => {\n          props.history.push(\"/customer/add\");\n        }}\n      >\n        Add Customer\n      </button>\n      <br />\n      <br />\n      <Container>\n        <Row>\n      <Table striped bordered hover size=\"sm\">\n      <thead >\n          <tr>\n            <th width=\"20px\">No</th>\n            <th width=\"250px\">Name</th>\n            <th width=\"220px\">Email</th>\n            <th width=\"100px\">Phone</th>\n            <th width=\"300px\">Address</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {customers.map((item) => (\n            <tr key={item.id}>\n              <td>{item.id}</td>\n              <td>{item.name}</td>\n              <td>{item.email}</td>\n              <td>{item.phone}</td>\n              <td>{item.address}</td>\n              <td>\n                <Button\n                  onClick={() => {\n                    props.history.push(\"/customer/edit/\" + item.id);\n                  }}\n                >\n                  Edit\n                </Button>\n              </td>\n              <td>\n                <Button variant=\"danger\" onClick={() => deleteItem(item)}>Delete</Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      </Row>\n      </Container>\n      <table border=\"1\" cellPadding=\"7\" cellSpacing=\"7\">\n        <thead>\n          <tr>\n            <th width=\"20px\">No</th>\n            <th width=\"250px\">Name</th>\n            <th width=\"220px\">Email</th>\n            <th width=\"100px\">Phone</th>\n            <th width=\"300px\">Address</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {customers.map((item) => (\n            <tr key={item.id}>\n              <td>{item.id}</td>\n              <td>{item.name}</td>\n              <td>{item.email}</td>\n              <td>{item.phone}</td>\n              <td>{item.address}</td>\n              <td>\n                <button\n                  onClick={() => {\n                    props.history.push(\"/customer/edit/\" + item.id);\n                  }}\n                >\n                  Edit\n                </button>\n              </td>\n              <td>\n                <button onClick={() => deleteItem(item)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n// import React, { Component } from \"react\";\n// import Menu from \"../components/Menu\";\n// import customerService from '../services/customerService';\n\n// export default class Customer extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//           items: customerService.getRecords(),\n//           name: \"\", id: '', email: \"\", phone: \"\", address: \"\",buttonLabel:\"Add Customer\"\n//         };\n//         console.log(this.state);\n//         this.handleSubmitAddEdit = this.handleSubmitAddEdit.bind(this); // line handles this pointer\n//       }\n//       handleChange = (e) => {\n//         this.setState({ [e.target.name]: e.target.value });\n//       };\n\n//       handleSubmitAddEdit(e) {\n//         e.preventDefault();\n//         if (!this.state.name.length) {\n//           return;\n//         }\n\n//         const newItem = {\n//           name: this.state.name,\n//           email: this.state.email,\n//           phone: this.state.phone,\n//           address: this.state.address,\n//         };\n//         if(this.state.id !=''){\n//             newItem.id=this.state.id;\n//             customerService.updateRecord(newItem)\n//             this.state.items=customerService.getRecords()\n//         }\n//         else{\n//           newItem.id=Date.now()\n//           customerService.addRecord(newItem)\n\n//             this.state.items=customerService.getRecords()\n//         }\n//         this.setState({\n//             name:'',\n//             email:'',\n//             phone:'',\n//             address:'',\n//             id:'',\n//             buttonLabel:'Add Customer'\n\n//         })\n\n//       }\n//       deleteItem = (id) => {\n//         console.log(\"id : \", id);\n//         customerService.deleteRecord(id);\n//         // var temp = this.state.items.filter((item) => item.id !== id);\n//         this.setState({\n//           items: customerService.getRecords(),\n//         });\n//       };\n\n//       editItem = (id) => {\n//         console.log(\"edit id : \", id);\n//         var temp = this.state.items.filter((item) => item.id == id);\n//         console.log(\"temp :  \", temp[0]);\n//         this.setState({\n//             name:temp[0].name,\n//             email:temp[0].email,\n//             phone:temp[0].phone,\n//             address:temp[0].address,\n//             id:temp[0].id,\n//             buttonLabel:\"Edit Customer\"\n//         })\n//       };\n\n//   render() {\n//     return (\n//       <div>\n//           <Menu/>\n//         <h3>CUSTOMERS</h3>\n//         <button onClick={()=>this.props.history.push('/customer/add')} >Add Customer</button> &nbsp; &nbsp;<br/><br/>\n//         <table border=\"1\" cellpadding=\"7\" cellspacing=\"7\">\n//           <thead>\n//             <tr>\n//               <th width=\"20px\">No</th>\n//               <th width=\"250px\">Name</th>\n//               <th width=\"220px\">Email</th>\n//               <th width=\"100px\">Phone</th>\n//               <th width=\"300px\">Address</th>\n//               <th>Edit</th>\n//               <th>Delete</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {this.state.items.map((item) => (\n//               <tr key={item.id}>\n//                 <td>{item.id}</td>\n//                 <td>{item.name}</td>\n//                 <td>{item.email}</td>\n//                 <td>{item.phone}</td>\n//                 <td>{item.address}</td>\n//                 <td>\n//                   <button\n//                     onClick={() => {\n//                       this.props.history.push('/customer/edit/'+item.id)\n//                     }}\n//                   >\n//                     Edit\n//                   </button>\n//                 </td>\n//                 <td>\n//                   <button\n//                     onClick={() => {\n//                       this.deleteItem(item.id);\n//                     }}\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport customerService from \"../services/customerService\";\n\nvar apiCustomer = \"http://localhost:4000/api/customer\";\nfunction CustomerAdd(props) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [id, setId] = useState(Date.now());\n  var handleChange = (e) => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"name\") {\n      setName(e.target.value);\n    } else if (e.target.name === \"phone\") {\n      setPhone(e.target.value);\n    } else if (e.target.name === \"address\") {\n      setAddress(e.target.value);\n    }\n  };\n  var handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name.length) {\n      return;\n    }\n    const newItem = {\n      name: name,\n      email: email,\n      phone: phone,\n      address: address,\n      \n    };\n    // customerService.addRecord(newItem)\n    fetch(apiCustomer, {\n      method: \"POST\",\n      body: JSON.stringify(newItem),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(()=>props.history.push(\"/customer\"));\n    \n  };\n\n  useEffect(() => {\n    console.log(\"id is\" + props.match.params.id);\n  });\n\n  return (\n    <div>\n      <h2>Add Customer</h2>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          placeholder=\"name\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"email\"\n          onChange={handleChange}\n          value={email}\n          placeholder=\"email\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"phone\"\n          onChange={handleChange}\n          value={phone}\n          placeholder=\"phone\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"address\"\n          onChange={handleChange}\n          value={address}\n          placeholder=\"address\"\n        />\n        <br />\n        <br />\n        <button> Add Customer</button>\n        <br />\n        <br />\n      </form>\n    </div>\n  );\n}\nexport default CustomerAdd;\n","import React,{useState,useEffect} from 'react';\nimport customerService from '../services/customerService';\nvar apiCustomer = \"http://localhost:4000/api/customer\";\n   function CustomerEdit(props) {\n    // const [name, setName] = useState(customerService.getRecordById(props.match.params.id).name);\n    // const [email, setEmail] = useState(customerService.getRecordById(props.match.params.id).email);\n    // const [phone, setPhone] = useState(customerService.getRecordById(props.match.params.id).phone);\n    // const [address, setAddress] = useState(customerService.getRecordById(props.match.params.id).address);\n    // const [id, setId]=useState(customerService.getRecordById(props.match.params.id).id)\n    const initialCustomer={\n        id:null,\n        name:'',\n        email:'',\n        phone:'',\n        address:''\n    }\n    const [customer,setCustomer]=useState(initialCustomer);\n\n    const getCustomer=(id)=>{\n        console.log(\"id is from getcustomer :\",id);\n        fetch(apiCustomer)\n        .then((res) => res.json())\n        .then(\n          (result) => {\n              \n              for (let i = 0; i < result.length; i++) {\n                if(result[i].id==id){\n                    console.log(result[i]);\n              setCustomer(result[i]);\n            }}\n                  \n              }\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          \n        );\n    }\n\n    useEffect(()=>{\n        getCustomer(props.match.params.id)\n    },[props.match.params.id])\n\n    var handleChange=(e)=>{\n        const {name,value}=e.target;\n        setCustomer(prevCust=>({...prevCust,\n            [name]: value \n        }))\n    }\n    // var handleChange = (e) => {\n    //   if (e.target.name === \"email\") {\n    //     setEmail(e.target.value);\n    //   } else if (e.target.name === \"name\") {\n    //     setName(e.target.value);\n    //   } else if (e.target.name === \"phone\") {\n    //     setPhone(e.target.value);\n    //   } else if (e.target.name === \"address\") {\n    //     setAddress(e.target.value);\n    //   }\n    // };\n    \n    var handleSumbit=(e)=>{\n        e.preventDefault();\n    if (!customer.name.length) {\n      return;\n    }\n    const newItem = {\n        name: customer.name,\n        email: customer.email,\n        phone: customer.phone,\n        address: customer.address,\n        id:customer.id\n      };\n      fetch(apiCustomer,{\n          method:'PUT',\n          body: JSON.stringify(newItem),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(()=>props.history.push(\"/customer\"));\n\n      \n    //   customerService.updateRecord(newItem)\n    //   props.history.push('/customer')\n    }\n      \n      return (\n         <div>\n            <h2>EDIT Customer</h2>\n            \n\n        <form onSubmit={handleSumbit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={customer.name}\n            placeholder=\"name\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChange}\n            value={customer.email}\n            placeholder=\"email\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"phone\"\n            onChange={handleChange}\n            value={customer.phone}\n            placeholder=\"phone\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChange}\n            value={customer.address}\n            placeholder=\"address\"\n          />\n          <br />\n          <br />\n          <button> Edit Customer</button>\n          <br />\n          <br />\n        </form>\n        </div>\n      );\n      \n   }\n    export default CustomerEdit;\n\n\n\n\n\n\n\n\n\n\n//     import React,{useState,useEffect} from 'react';\n// import customerService from '../services/customerService';\n//    function CustomerEdit(props) {\n//     // const [name, setName] = useState(customerService.getRecordById(props.match.params.id).name);\n//     // const [email, setEmail] = useState(customerService.getRecordById(props.match.params.id).email);\n//     // const [phone, setPhone] = useState(customerService.getRecordById(props.match.params.id).phone);\n//     // const [address, setAddress] = useState(customerService.getRecordById(props.match.params.id).address);\n//     // const [id, setId]=useState(customerService.getRecordById(props.match.params.id).id)\n//     const initialCustomer={\n//         id:null,\n//         name:'',\n//         email:'',\n//         phone:'',\n//         address:''\n//     }\n//     const [customer,setCustomer]=useState(initialCustomer);\n\n//     const getCustomer=(id)=>{\n//         setCustomer(customerService.getRecordById(id))\n//     }\n\n//     useEffect(()=>{\n//         getCustomer(props.match.params.id)\n//     },[props.match.params.id])\n\n//     var handleChange=(e)=>{\n//         const {name,value}=e.target;\n//         setCustomer(prevCust=>({...prevCust,\n//             [name]: value \n//         }))\n//     }\n//     // var handleChange = (e) => {\n//     //   if (e.target.name === \"email\") {\n//     //     setEmail(e.target.value);\n//     //   } else if (e.target.name === \"name\") {\n//     //     setName(e.target.value);\n//     //   } else if (e.target.name === \"phone\") {\n//     //     setPhone(e.target.value);\n//     //   } else if (e.target.name === \"address\") {\n//     //     setAddress(e.target.value);\n//     //   }\n//     // };\n    \n//     var handleSumbit=(e)=>{\n//         e.preventDefault();\n//     if (!customer.name.length) {\n//       return;\n//     }\n//     const newItem = {\n//         name: customer.name,\n//         email: customer.email,\n//         phone: customer.phone,\n//         address: customer.address,\n//         id:customer.id\n//       };\n//       customerService.updateRecord(newItem)\n//       props.history.push('/customer')\n//     }\n//       useEffect(()=>{\n//         console.log(\"id is :\"+props.match.params.id);\n//       })\n//       return (\n//          <div>\n//             <h2>EDIT Customer</h2>\n            \n\n//         <form onSubmit={handleSumbit}>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={handleChange}\n//             value={customer.name}\n//             placeholder=\"name\"\n//           />\n//           <br />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             onChange={handleChange}\n//             value={customer.email}\n//             placeholder=\"email\"\n//           />\n//           <br />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             onChange={handleChange}\n//             value={customer.phone}\n//             placeholder=\"phone\"\n//           />\n//           <br />\n//           <input\n//             type=\"text\"\n//             name=\"address\"\n//             onChange={handleChange}\n//             value={customer.address}\n//             placeholder=\"address\"\n//           />\n//           <br />\n//           <br />\n//           <button> Edit Customer</button>\n//           <br />\n//           <br />\n//         </form>\n//         </div>\n//       );\n      \n//    }\n//     export default CustomerEdit;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Menu from '../components/Menu'\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would boil.</p>;\n  }\n  return <p>The water would not boil.</p>;\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature} onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    console.log(\">> constructor ..Calculator\")\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    console.log(\">>handleCelsiusChange \"+ temperature);\n    this.setState({scale: 'c', temperature: temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    console.log(\">>handleFahrenheitChange\" +temperature);\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const celsius = this.state.scale === 'f' ? tryConvert(this.state.temperature, toCelsius) : this.state.temperature;\n    const fahrenheit = this.state.scale === 'c' ? tryConvert(this.state.temperature, toFahrenheit) : this.state.temperature;\n\n    return (\n      <div>\n        <Menu/>\n        <h3>Temperature Example</h3>\n        <TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n/*\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);*/","import React, { Component } from \"react\";\nimport Menu from '../components/Menu'\n\nclass Sum extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n        a:props.a,\n        b:props.b\n    }\n    this.handleChange=this.handleChange.bind(this)\n  }\n  handleChange(e) {\n    this.setState({\n        [e.target.name]:e.target.value\n    })\n    this.props.onValueChange(e.target.value,e.target.name);\n  };\n  render() {\n    return (\n      <div>\n        <input\n            name=\"a\"\n          type=\"number\"\n          value={this.props.a}\n          onChange={this.handleChange}\n        />\n        <br />\n        <input\n        name=\"b\"\n          type=\"number\"\n          value={this.props.b}\n          onChange={this.handleChange}\n        />\n        <br />\n        <h4> Sum is : {this.props.a + this.props.b}</h4>\n      </div>\n    );\n  }\n}\nclass Diff extends Component {}\nclass Mult extends Component {}\n\nclass Maths extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      a: 6,\n      b: 4,\n    };\n  }\n  handleChange=(val,name)=>{\n      this.setState({\n          name:val\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu />\n        <h3>Maths Example</h3>\n        <Sum a={this.state.a} b={this.state.b} onValueChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nexport default Maths;\n","// import React, { Component } from 'react';\n\n// const withUser =WrappedComponent=>{\n//     const user='RAMEHS S';\n//     return props=> <WrappedComponent name={user}{...props}/>\n// }\n// class HocExample extends Component {\n//     constructor(props) {\n//         super(props);\n//     }\n    \n//     render() {\n//         return (\n//             <div>\n//                 <p>My name is {this.props.name}</p>\n//             </div>\n//         );\n//     }\n// }\n\n// export default withUser(HocExample);\n\n\n\n// ===========================================================================================================\n\n// import React, { Component } from 'react';\n// function FancyBorder(props) {\n//   return (\n//     <div style={{color: props.color, backgroundColor: 'grey'}} >\n//       {props.children}\n//     </div>\n//   );\n// }\n\n// export default function WelcomeDialog() {\n//   return (\n//     <FancyBorder color=\"blue\">\n//       <h1 className=\"Dialog-title\">\n//         Welcome\n//       </h1>\n//       <p className=\"Dialog-message\">\n//         Thank you for visiting our spacecraft!\n//       </p>\n//     </FancyBorder>\n//   );\n// }\n\n\n// ===========================================================================================================\n\nimport React, { Component } from 'react';\n\n// Context lets us pass a value deep into the component tree\n// without explicitly threading it through every component.\n// Create a context for the current theme (with \"light\" as the default).\nconst ThemeContext = React.createContext('light');\n\nexport default class App extends React.Component {\n  render() {\n    // Use a Provider to pass the current theme to the tree below.\n    // Any component can read it, no matter how deep it is.\n    // In this example, we're passing \"dark\" as the current value.\n    return (\n      <ThemeContext.Provider value=\"dark\">\n        <Toolbar />\n      </ThemeContext.Provider>\n    );\n  }\n}\n\n// A component in the middle doesn't have to\n// pass the theme down explicitly anymore.\nfunction Toolbar(props) {\n  return (\n    <div>\n        \n      <ThemedButton />\n    </div>\n  );\n}\n\nclass ThemedButton extends React.Component {\n  // Assign a contextType to read the current theme context.\n  // React will find the closest theme Provider above and use its value.\n  // In this example, the current theme is \"dark\".\n  static contextType = ThemeContext;\n  render() {\n    return <button>{this.context}</button>\n  }\n}","import React, { useContext, createContext, useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport CustomerApp from \"./containers/CustomerApp\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport About from \"./containers/About\";\nimport Customer from \"./containers/Customer\";\nimport CustomerAdd from \"./containers/CustomerADD\";\nimport CustomerEdit from \"./containers/CustomerEdit\";\nimport Calculator from \"./containers/Temperature\";\nimport Maths from \"./containers/Maths\";\nimport HocExample from \"./containers/HocExample\";\n\n\n\nfunction App() {\n  return (\n    <ProvideAuth>q\n    <Router>\n      <div style={{ marginLeft: 30 }}>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute  exact path=\"/home\">\n            <Home/>\n          </PrivateRoute>\n          \n          <PrivateRoute exact path=\"/about\" component={About} ><About/></PrivateRoute>\n          <PrivateRoute exact path=\"/customer-app\" component={CustomerApp} />\n          <PrivateRoute exact path=\"/customer\" component={Customer} />\n          <PrivateRoute exact path=\"/customer/add\" component={CustomerAdd} />\n          <PrivateRoute exact path=\"/customer/edit/:id\" component={CustomerEdit} />\n          <Route exact path=\"/temperature\" component={Calculator} />\n          <Route exact path=\"/maths\" component={Maths} />\n          <Route exact path=\"/hocexample\" component={HocExample} />\n        </Switch>\n      </div>\n    </Router>\n    </ProvideAuth>\n  );\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  signin(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\nconst authContext = createContext();\n\nfunction ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return (\n    <authContext.Provider value={auth}>\n      {children}\n    </authContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState('user');\n  useEffect(()=>{\n     console.log(\"first Call\");\n     setUser(localStorage.getItem('user'));\n  })\n  const signin = cb => {\n    return fakeAuth.signin(() => {\n       console.log(\"signin\");\n      setUser(\"user\");\n      localStorage.setItem('user','admin@yara.com');\n      cb();\n    });\n  };\n\n  const signout = cb => {\n    return fakeAuth.signout(() => {\n      localStorage.removeItem('user');\n      setUser(null);\n      cb();\n    });\n  };\n  //setUser(localStorage.getItem('user'));\n // var loginUser = localStorage.getItem('user');\n  return {\n    user,\n    signin,\n    signout\n  };\n}\n\nfunction AuthButton() {\n  let history = useHistory();\n  let auth = useAuth();\n\n  return auth.user ? (\n    <p>\n      Welcome!{\" \"}\n      <button\n        onClick={() => {\n          auth.signout(() => history.push(\"/\"));\n        }}\n      >\n        Sign out\n      </button>\n    </p>\n  ) : (\n    <p>You are not logged in.</p>\n  );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicPage() {\n  return <h3>Public</h3>;\n}\n\nfunction ProtectedPage() {\n  return <h3>Protected</h3>;\n}\n\n// function LoginPage() {\n//   let history = useHistory();\n//   let location = useLocation();\n//   let auth = useAuth();\n\n//   let { from } = location.state || { from: { pathname: \"/\" } };\n//   let login = () => {\n//     auth.signin(() => {\n//       history.replace(from);\n//     });\n//   };\n//   return (\n//     <div>\n//       <p>You must log in to view the page at {from.pathname}</p>\n//       <button onClick={login}>Log in</button>\n//     </div>\n//   );\n// }\nexport default App;\n\n\n// export default function App() {\n//   return (\n//     <ProvideAuth>\n//       <Router>\n//         <div>\n//           <AuthButton />\n\n//           <ul>\n//             <li>\n//               <Link to=\"/public\">Public Page</Link>\n//             </li>\n//             <li>\n//               <Link to=\"/protected\">Protected Page</Link>\n//             </li>\n//           </ul>\n\n//           <Switch>\n//             <Route path=\"/public\">\n//               <PublicPage />\n//             </Route>\n//             <Route path=\"/login\">\n//               <LoginPage />\n//             </Route>\n//             <PrivateRoute path=\"/protected\">\n//               <ProtectedPage />\n//             </PrivateRoute>\n//           </Switch>\n//         </div>\n//       </Router>\n//     </ProvideAuth>\n//   );\n// }\n\n// const fakeAuth = {\n//   isAuthenticated: false,\n//   signin(cb) {\n//     fakeAuth.isAuthenticated = true;\n//     setTimeout(cb, 100); // fake async\n//   },\n//   signout(cb) {\n//     fakeAuth.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// };\n\n// /** For more details on\n//  * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n//  * refer to: https://usehooks.com/useAuth/\n//  */\n// const authContext = createContext();\n\n// function ProvideAuth({ children }) {\n//   const auth = useProvideAuth();\n//   return (\n//     <authContext.Provider value={auth}>\n//       {children}\n//     </authContext.Provider>\n//   );\n// }\n\n// function useAuth() {\n//   return useContext(authContext);\n// }\n\n// function useProvideAuth() {\n//   const [user, setUser] = useState('user');\n//   useEffect(()=>{\n//      console.log(\"first Call\");\n//      setUser(localStorage.getItem('user'));\n//   })\n//   const signin = cb => {\n//     return fakeAuth.signin(() => {\n//        console.log(\"signin\");\n//       setUser(\"user\");\n//       localStorage.setItem('user','admin@yara.com');\n//       cb();\n//     });\n//   };\n\n//   const signout = cb => {\n//     return fakeAuth.signout(() => {\n//       localStorage.removeItem('user');\n//       setUser(null);\n//       cb();\n//     });\n//   };\n//   //setUser(localStorage.getItem('user'));\n//  // var loginUser = localStorage.getItem('user');\n//   return {\n//     user,\n//     signin,\n//     signout\n//   };\n// }\n\n// function AuthButton() {\n//   let history = useHistory();\n//   let auth = useAuth();\n\n//   return auth.user ? (\n//     <p>\n//       Welcome!{\" \"}\n//       <button\n//         onClick={() => {\n//           auth.signout(() => history.push(\"/\"));\n//         }}\n//       >\n//         Sign out\n//       </button>\n//     </p>\n//   ) : (\n//     <p>You are not logged in.</p>\n//   );\n// }\n\n// // A wrapper for <Route> that redirects to the login\n// // screen if you're not yet authenticated.\n// function PrivateRoute({ children, ...rest }) {\n//   let auth = useAuth();\n//   return (\n//     <Route\n//       {...rest}\n//       render={({ location }) =>\n//         auth.user ? (\n//           children\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/login\",\n//               state: { from: location }\n//             }}\n//           />\n//         )\n//       }\n//     />\n//   );\n// }\n\n// function PublicPage() {\n//   return <h3>Public</h3>;\n// }\n\n// function ProtectedPage() {\n//   return <h3>Protected</h3>;\n// }\n\n// function LoginPage() {\n//   let history = useHistory();\n//   let location = useLocation();\n//   let auth = useAuth();\n\n//   let { from } = location.state || { from: { pathname: \"/\" } };\n//   let login = () => {\n//     auth.signin(() => {\n//       history.replace(from);\n//     });\n//   };\n//   return (\n//     <div>\n//       <p>You must log in to view the page at {from.pathname}</p>\n//       <button onClick={login}>Log in</button>\n//     </div>\n//   );\n// }\n\n// /*\n// function App() {\n//   return (\n//     <Router>\n//     <div style={{marginLeft:'20px',marginRight:'20px',}}>\n//        <Switch>\n//           <Route exact path='/' component={Login} />\n//           <Route exact path='/login' component={Login} />\n//           <Route exact path='/customer' component={Customer} />\n//           <Route exact path='/customer/add' component={CustomerAdd} />\n//           <Route exact path='/customer/edit/:id' component={CustomerAdd} />\n//           <Route exact path='/temperature' component={Temperature} />\n//           <Route exact path='/customer-app' component={CustomerApp} />\n//           <Route exact path='/home' component={Home} />\n//           <Route exact path='/about' component={About} />\n//        </Switch>\n//     </div>\n//  </Router>\n//   );\n// }\n// */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}